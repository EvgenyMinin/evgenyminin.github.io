{"version":3,"sources":["serviceWorker.js","components/common/CardsContainer.js","components/common/CardsWrapper.js","components/BotCard.js","components/PlayerCard.js","components/BetSlider.js","components/PlayerInfo.js","components/common/CardDeck.js","components/common/Buttons.js","utils/getScore.js","components/App.js","index.js","assets/table.jpg"],"names":["Boolean","window","location","hostname","match","CardsContainer","styled","div","ScoreContainer","CardWrapper","BotCard","botCards","botScore","isPlayerStand","map","card","key","className","BlankCard","PlayerCard","cards","playerScore","BetSlider","bet","bankroll","onBet","BetSliderContainer","BetContainer","SliderWrapper","type","min","max","step","value","onChange","e","target","MinMaxBoxWrapper","BankRollContainer","PlayerInfo","PlayerInfoContainer","PlayerInfoWrapper","PlayerInfoName","PlayerInfoBet","PlayerInfoTotal","cardDeck","compareRandom","Math","random","BUTTON_MODIFIERS","start","css","hit","stand","deal","Button","button","applyStyleModifiers","getScore","score","forEach","slice","App","blackJackScore","JSON","parse","localStorage","getItem","useState","randomCards","setRandomCards","setBotCards","setCards","setBankroll","isStarting","setIsStarting","setIsPlayerStand","setBotScore","setBet","useEffect","newCard","pop","oldCards","setItem","tempArray","sort","splice","Container","GameContainer","StartGameButtonContainer","StartGameButtonWrapper","RebuyContainer","modifiers","onClick","ToolsContainer","ToolsWrapper","ButtonsContainer","disabled","parseInt","table","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.605752ba.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport const CardsContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 30vh;\r\n`;\r\n\r\nexport const ScoreContainer = styled.div`\r\n  position: absolute;\r\n  left: -30px;\r\n  top: -30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: \"Arial\";\r\n  font-size: 24px;\r\n  color: white;\r\n  background-color: crimson;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardWrapper = styled.div`\r\n  height: 173px;\r\n  width: 120px;\r\n  border-radius: 10px;\r\n  border: 1px solid grey;\r\n  &:not(:last-child) {\r\n    margin-right: -70px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CardsContainer, ScoreContainer } from \"./common/CardsContainer\";\r\nimport { CardWrapper } from \"./common/CardsWrapper\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BotCard = ({ botCards, botScore, isPlayerStand }) => {\r\n  return (\r\n    <CardsContainer>\r\n      {isPlayerStand ? (\r\n        <ScoreContainer>{botScore}</ScoreContainer>\r\n      ) : (\r\n        <ScoreContainer>?</ScoreContainer>\r\n      )}\r\n\r\n      {botCards.map((card) => (\r\n        <CardWrapper key={card} className={card}></CardWrapper>\r\n      ))}\r\n      {!isPlayerStand && (\r\n        <BlankCard>\r\n          <CardWrapper className=\"cardBack\"></CardWrapper>\r\n        </BlankCard>\r\n      )}\r\n    </CardsContainer>\r\n  );\r\n};\r\n\r\nexport default BotCard;\r\n\r\nconst BlankCard = styled.div``;\r\n","import React from \"react\";\r\nimport { CardsContainer, ScoreContainer } from \"./common/CardsContainer\";\r\nimport { CardWrapper } from \"./common/CardsWrapper\";\r\n\r\nconst PlayerCard = ({ cards, playerScore }) => {\r\n  return (\r\n    <CardsContainer>\r\n      <ScoreContainer>{playerScore}</ScoreContainer>\r\n      {cards.map((card) => (\r\n        <CardWrapper key={card} className={card}></CardWrapper>\r\n      ))}\r\n    </CardsContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BetSlider = ({ bet, bankroll, onBet }) => {\r\n  return (\r\n    <BetSliderContainer>\r\n      <BetContainer>Your bet: {bet}</BetContainer>\r\n      <SliderWrapper>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max={bankroll}\r\n          step=\"1\"\r\n          value={bet}\r\n          onChange={(e) => onBet(e.target.value)}\r\n        />\r\n      </SliderWrapper>\r\n      <MinMaxBoxWrapper>\r\n        <span>1</span>\r\n        <span>{bankroll}</span>\r\n      </MinMaxBoxWrapper>\r\n      <BankRollContainer>Total: ${bankroll}</BankRollContainer>\r\n    </BetSliderContainer>\r\n  );\r\n};\r\n\r\nexport default BetSlider;\r\n\r\nconst BetSliderContainer = styled.div`\r\n  color: brown;\r\n  margin-bottom: 16px;\r\n  min-width: 200px;\r\n  input {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BetContainer = styled.div`\r\n  color: brown;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst SliderWrapper = styled.div``;\r\n\r\nconst MinMaxBoxWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst BankRollContainer = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlayerInfo = ({ bet, bankroll }) => {\r\n  return (\r\n    <PlayerInfoContainer>\r\n      <PlayerInfoWrapper>\r\n        <PlayerInfoName>Player</PlayerInfoName>\r\n        <PlayerInfoBet>Bet: ${bet}</PlayerInfoBet>\r\n      </PlayerInfoWrapper>\r\n      <PlayerInfoTotal>Total: ${bankroll}</PlayerInfoTotal>\r\n    </PlayerInfoContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerInfo;\r\n\r\nconst PlayerInfoContainer = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst PlayerInfoWrapper = styled.div`\r\n  padding: 12px;\r\n  border-bottom: 3px solid crimson;\r\n`;\r\nconst PlayerInfoName = styled.div`\r\n  color: white;\r\n`;\r\nconst PlayerInfoBet = styled.div`\r\n  color: white;\r\n`;\r\nconst PlayerInfoTotal = styled.div`\r\n  padding: 12px;\r\n  color: white;\r\n`;\r\n","export const cardDeck = [\r\n  \"d2\",\r\n  \"d3\",\r\n  \"d4\",\r\n  \"d5\",\r\n  \"d6\",\r\n  \"d7\",\r\n  \"d8\",\r\n  \"d9\",\r\n  \"dT\",\r\n  \"dJ\",\r\n  \"dQ\",\r\n  \"dK\",\r\n  \"dA\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"h4\",\r\n  \"h5\",\r\n  \"h6\",\r\n  \"h7\",\r\n  \"h8\",\r\n  \"h9\",\r\n  \"hT\",\r\n  \"hJ\",\r\n  \"hQ\",\r\n  \"hK\",\r\n  \"hA\",\r\n  \"c2\",\r\n  \"c3\",\r\n  \"c4\",\r\n  \"c5\",\r\n  \"c6\",\r\n  \"c7\",\r\n  \"c8\",\r\n  \"c9\",\r\n  \"cT\",\r\n  \"cJ\",\r\n  \"cQ\",\r\n  \"cK\",\r\n  \"cA\",\r\n  \"s2\",\r\n  \"s3\",\r\n  \"s4\",\r\n  \"s5\",\r\n  \"s6\",\r\n  \"s7\",\r\n  \"s8\",\r\n  \"s9\",\r\n  \"sT\",\r\n  \"sJ\",\r\n  \"sQ\",\r\n  \"sK\",\r\n  \"sA\",\r\n];\r\n\r\nexport const compareRandom = () => {\r\n  return Math.random() - 0.5;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { applyStyleModifiers } from \"styled-components-modifiers\";\r\n\r\nconst BUTTON_MODIFIERS = {\r\n  start: () => css`\r\n    background-color: brown;\r\n    &:hover {\r\n      background-color: crimson;\r\n    }\r\n  `,\r\n  hit: () => css`\r\n    background-color: goldenrod;\r\n    &:disabled {\r\n      background-color: darkkhaki;\r\n    }\r\n  `,\r\n  stand: () => css`\r\n    background-color: lightseagreen;\r\n  `,\r\n  deal: () => css`\r\n    background-color: #407855;\r\n  `,\r\n};\r\n\r\nexport const Button = styled.button`\r\n  font-family: \"Arial\";\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  letter-spacing: 2px;\r\n  height: 50px;\r\n  min-width: 70px;\r\n  padding: 0 16px;\r\n  color: white;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  border: 0;\r\n  outline: 0;\r\n  border-radius: 10px;\r\n\r\n  ${applyStyleModifiers(BUTTON_MODIFIERS)};\r\n`;\r\n","export const getScore = (cards) => {\r\n  let score = 0;\r\n  cards.forEach((card) => {\r\n    const cardValue = card.slice(1);\r\n    switch (cardValue) {\r\n      case \"2\":\r\n        score += 2;\r\n        break;\r\n      case \"3\":\r\n        score += 3;\r\n        break;\r\n      case \"4\":\r\n        score += 4;\r\n        break;\r\n      case \"5\":\r\n        score += 5;\r\n        break;\r\n      case \"6\":\r\n        score += 6;\r\n        break;\r\n      case \"7\":\r\n        score += 7;\r\n        break;\r\n      case \"8\":\r\n        score += 8;\r\n        break;\r\n      case \"9\":\r\n        score += 9;\r\n        break;\r\n      case \"T\":\r\n      case \"J\":\r\n      case \"Q\":\r\n      case \"K\":\r\n        score += 10;\r\n        break;\r\n      case \"A\":\r\n        if (score + 11 > 21) {\r\n          score += 1;\r\n        } else {\r\n          score += 11;\r\n        }\r\n        break;\r\n      default:\r\n        score = 0;\r\n    }\r\n  });\r\n  return score;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport BotCard from \"./BotCard\";\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport BetSlider from \"./BetSlider\";\r\nimport PlayerInfo from \"./PlayerInfo\";\r\n\r\nimport { cardDeck, compareRandom } from \"./common/CardDeck\";\r\nimport { Button } from \"./common/Buttons\";\r\n\r\nimport table from \"../assets/table.jpg\";\r\nimport { getScore } from \"../utils/getScore\";\r\nimport \"../scss/cards.scss\";\r\n\r\nconst App = () => {\r\n  const blackJackScore = JSON.parse(localStorage.getItem(\"blackjack\"));\r\n  const [randomCards, setRandomCards] = useState([]);\r\n  const [botCards, setBotCards] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [bankroll, setBankroll] = useState(blackJackScore || 100);\r\n  const [isStarting, setIsStarting] = useState(false);\r\n  const [isPlayerStand, setIsPlayerStand] = useState(false);\r\n  const playerScore = getScore(cards);\r\n  const [botScore, setBotScore] = useState(0);\r\n  const [bet, setBet] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (isPlayerStand && botScore <= 15) {\r\n      const newCard = randomCards.pop();\r\n      setBotCards((oldCards) => [...oldCards, newCard]);\r\n    }\r\n  }, [randomCards, botScore, isPlayerStand]);\r\n\r\n  useEffect(() => {\r\n    setBotScore(getScore(botCards));\r\n  }, [botCards]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"blackjack\", bankroll);\r\n  }, [bankroll]);\r\n\r\n  useEffect(() => {\r\n    const tempArray = cardDeck.slice();\r\n    setRandomCards(tempArray.sort(compareRandom));\r\n    setBotCards(randomCards.splice(-2, 1));\r\n    setCards(randomCards.splice(-2, 2));\r\n  }, [isStarting]);\r\n\r\n  const startGame = () => {\r\n    setIsStarting(true);\r\n  };\r\n\r\n  const addCard = () => {\r\n    const newCard = randomCards.pop();\r\n    setCards((oldCards) => [...oldCards, newCard]);\r\n  };\r\n\r\n  const stand = () => {\r\n    setIsPlayerStand(true);\r\n  };\r\n\r\n  const rebuy = () => {\r\n    localStorage.setItem(\"blackjack\", 100);\r\n    setBankroll(100);\r\n  };\r\n\r\n  const deal = () => {\r\n    if (playerScore <= 21 && playerScore > botScore) {\r\n      setBankroll(bankroll + parseInt(bet));\r\n    } else if (playerScore <= 21 && botScore > 21) {\r\n      setBankroll(bankroll + parseInt(bet));\r\n    } else if (\r\n      playerScore <= 21 &&\r\n      botScore <= 21 &&\r\n      playerScore === botScore\r\n    ) {\r\n      setBankroll(bankroll);\r\n    } else if (playerScore < botScore && botScore <= 21) {\r\n      setBankroll(bankroll - parseInt(bet));\r\n    } else if ((playerScore > 21) & (botScore > 21)) {\r\n      setBankroll(bankroll);\r\n    } else {\r\n      setBankroll(bankroll - parseInt(bet));\r\n    }\r\n    setRandomCards([]);\r\n    setIsStarting(false);\r\n    setBotCards([]);\r\n    setCards([]);\r\n    setIsPlayerStand(false);\r\n    setBet(1);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {isStarting ? (\r\n        <GameContainer>\r\n          <BotCard\r\n            botCards={botCards}\r\n            botScore={botScore}\r\n            isPlayerStand={isPlayerStand}\r\n          />\r\n          <PlayerCard cards={cards} playerScore={playerScore} />\r\n          <PlayerInfo bet={bet} bankroll={bankroll} />\r\n        </GameContainer>\r\n      ) : (\r\n        <StartGameButtonContainer>\r\n          <StartGameButtonWrapper>\r\n            {blackJackScore === 0 ? (\r\n              <>\r\n                <RebuyContainer>\r\n                  You have <span>$0</span> <br /> Please rebuy\r\n                </RebuyContainer>\r\n                <Button modifiers={[\"start\"]} onClick={rebuy}>\r\n                  Rebuy\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <BetSlider bet={bet} bankroll={bankroll} onBet={setBet} />\r\n                <Button modifiers={[\"start\"]} onClick={startGame}>\r\n                  Start Game\r\n                </Button>\r\n              </>\r\n            )}\r\n          </StartGameButtonWrapper>\r\n        </StartGameButtonContainer>\r\n      )}\r\n\r\n      {isStarting && (\r\n        <ToolsContainer>\r\n          <ToolsWrapper>\r\n            <>\r\n              <ButtonsContainer>\r\n                <Button\r\n                  modifiers={[\"hit\"]}\r\n                  disabled={playerScore >= 21 || isPlayerStand}\r\n                  onClick={addCard}\r\n                >\r\n                  Hit\r\n                </Button>\r\n                <Button modifiers={[\"stand\"]} onClick={stand}>\r\n                  Stand\r\n                </Button>\r\n                {isPlayerStand && (\r\n                  <Button modifiers={[\"deal\"]} onClick={deal}>\r\n                    Deal\r\n                  </Button>\r\n                )}\r\n              </ButtonsContainer>\r\n            </>\r\n          </ToolsWrapper>\r\n        </ToolsContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-image: url(${table});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst ToolsContainer = styled.div`\r\n  height: 70px;\r\n  width: 100%;\r\n  background-color: rgba(128, 0, 0, 0.5);\r\n  border-top: 5px solid crimson;\r\n`;\r\n\r\nconst ToolsWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 15px;\r\n`;\r\n\r\nconst StartGameButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  ${Button} {\r\n    &:not(:last-child) {\r\n      margin-right: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StartGameButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f6f5f3;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n  height: 300px;\r\n  width: 300px;\r\n  border: 10px solid brown;\r\n`;\r\n\r\nconst RebuyContainer = styled.div`\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n  margin-bottom: 16px;\r\n  span {\r\n    color: brown;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/table.819173d6.jpg\";"],"sourceRoot":""}