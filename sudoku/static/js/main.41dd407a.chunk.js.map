{"version":3,"sources":["reducers/actions.ts","utils/check-grid/index.ts","utils/compare-arrays/index.ts","utils/copy-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/get-random-index/index.ts","utils/identify-square/index.ts","utils/is-in/row/index.ts","utils/is-in/col/index.ts","utils/is-in/square/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","reducers/reducer.ts","reducers/index.ts","core/configure-store/index.ts","core/service-worker/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/NewButton/index.tsx","components/numbers/consts.ts","components/numbers/styles/index.ts","components/numbers/button/index.tsx","components/numbers/index.tsx","components/styles/button/index.ts","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/title/index.ts","styles/global.ts","index.tsx","styles/theme.ts","reducers/types.ts"],"names":["createGrid","type","types","fillBlock","value","coords","selectBlock","checkGrid","grid","i","j","compareArrays","arr1","arr2","Array","isArray","length","len","copyGrid","gridCopy","row","col","createFullGrid","fillGrid","numbers","Math","floor","shuffle","isInRow","isInCol","square","identifySquare","isInSquare","getRandomIndex","random","x","push","IsInRow","includes","IsInCol","counter","removeNumbers","attempts","backup","global","solveGrid","array","initialState","reducer","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Container","styled","div","active","puzzle","theme","css","colors","blue","white","black","transition","lightblue","Block","rowIndex","colIndex","useSelector","isActive","isPuzzle","dispatch","useDispatch","data-cy","onClick","Row","Grid","selectedValue","create","useCallback","moveUp","moveDown","moveLeft","moveRight","fill","n","pressOne","pressTwo","pressThree","pressFour","pressFive","pressSix","pressSeven","pressEight","pressNine","useEffect","handleKeyUp","e","keyCode","document","addEventListener","removeEventListener","Children","toArray","map","_","NewButton","createNewGrid","confirm","Button","NumberButton","Numbers","button","Card","Content","Title","h1","createGlobalStyle","background","ReactDOM","render","loading","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.41dd407a.chunk.js","sourcesContent":["import { Action, AnyAction } from 'redux'\r\n\r\nimport { BLOCK_COORDS, NUMBERS } from 'typings'\r\n\r\nimport * as types from './types'\r\n\r\nexport const createGrid = (): Action => ({\r\n  type: types.CREATE_GRID,\r\n})\r\n\r\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.FILL_BLOCK,\r\n  value,\r\n})\r\n\r\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.SELECT_BLOCK,\r\n})\r\n","import { GRID } from 'typings'\r\n\r\nfunction checkGrid(grid: GRID): boolean {\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (grid[i][j] === 0) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport default checkGrid\r\n","const compareArrays = (arr1: any[], arr2: any[]): boolean => {\r\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) {\r\n    return arr1 === arr2\r\n  }\r\n\r\n  if (arr1.length !== arr2.length) return false\r\n\r\n  for (let i = 0, len = arr1.length; i < len; i++) {\r\n    if (!compareArrays(arr1[i], arr2[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport default compareArrays\r\n","import { GRID, INDEX } from 'typings'\r\n\r\nconst copyGrid = (grid: GRID): GRID => {\r\n  const gridCopy: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n\r\n  for (let row: INDEX = 0; row < 9; row++) {\r\n    for (let col: INDEX = 0; col < 9; col++) {\r\n      gridCopy[row][col] = grid[row][col]\r\n    }\r\n  }\r\n\r\n  return gridCopy\r\n}\r\n\r\nexport default copyGrid\r\n","import { GRID } from 'typings'\r\nimport { fillGrid } from 'utils'\r\n\r\nfunction createFullGrid(): GRID {\r\n  const grid: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n  fillGrid(grid)\r\n  return grid\r\n}\r\n\r\nexport default createFullGrid\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport {\r\n  checkGrid,\r\n  identifySquare,\r\n  isInRow,\r\n  isInCol,\r\n  isInSquare,\r\n  shuffle,\r\n} from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\nfunction fillGrid(grid: GRID) {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(numbers)\r\n\r\n      for (let value of numbers) {\r\n        if (!isInRow({ grid, row, value })) {\r\n          if (!isInCol({ grid, col, value })) {\r\n            const square = identifySquare({ grid, col, row })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) {\r\n                return true\r\n              } else if (fillGrid(grid)) {\r\n                return true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default fillGrid\r\n","/**\r\n * Return a random sudoku grid index in the 0 = 8 range\r\n */\r\nconst getRandomIndex = () => {\r\n  return Math.floor(Math.random() * Math.floor(9))\r\n}\r\n\r\nexport default getRandomIndex\r\n","import { SQUARE } from 'typings'\r\nimport { IInput } from './types'\r\n\r\nfunction identifySquare({ grid, col, row }: IInput): SQUARE {\r\n  const square = []\r\n\r\n  if (row < 3) {\r\n    if (col < 3)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else if (row < 6) {\r\n    if (col < 3)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else {\r\n    if (col < 3)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  }\r\n\r\n  return square as SQUARE\r\n}\r\n\r\nexport default identifySquare\r\n","import { IInput } from './types'\r\n\r\nfunction IsInRow({ grid, row, value }: IInput): boolean {\r\n  return grid[row].includes(value)\r\n}\r\n\r\nexport default IsInRow\r\n","import { IInput } from './types'\r\n\r\nfunction IsInCol({ grid, col, value }: IInput): boolean {\r\n  for (let i = 0; i < 9; i++) {\r\n    if (value === grid[i][col]) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport default IsInCol\r\n","import { IInput } from './types'\r\n\r\nfunction isInSquare({ square, value }: IInput): boolean {\r\n  return [...square[0], ...square[1], ...square[2]].includes(value)\r\n}\r\n\r\nexport default isInSquare\r\n","export default {\r\n  counter: 0,\r\n}\r\n","import global from 'global'\r\nimport { GRID } from 'typings'\r\nimport { copyGrid, getRandomIndex, solveGrid } from 'utils'\r\n\r\nconst removeNumbers = (grid: GRID, attempts = 5): GRID => {\r\n  while (attempts > 0) {\r\n    let row = getRandomIndex()\r\n    let col = getRandomIndex()\r\n\r\n    while (grid[row][col] === 0) {\r\n      row = getRandomIndex()\r\n      col = getRandomIndex()\r\n    }\r\n\r\n    const backup = grid[row][col]\r\n    grid[row][col] = 0\r\n\r\n    const gridCopy = copyGrid(grid)\r\n    global.counter = 0\r\n\r\n    solveGrid(gridCopy)\r\n\r\n    if (global.counter !== 1) {\r\n      grid[row][col] = backup\r\n      attempts--\r\n    }\r\n  }\r\n  return grid\r\n}\r\n\r\nexport default removeNumbers\r\n","function shuffle(array: any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n}\r\n\r\nexport default shuffle\r\n","import global from 'global'\r\nimport { GRID, NUMBERS } from 'typings'\r\nimport { checkGrid, identifySquare, isInRow, isInSquare, isInCol } from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\nconst solveGrid = (grid: GRID) => {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let value of numbers) {\r\n        if (!isInRow({ grid, row, value })) {\r\n          if (!isInCol({ grid, col, value })) {\r\n            const square = identifySquare({ grid, col, row })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) {\r\n                global.counter++\r\n                break\r\n              } else if (solveGrid(grid)) {\r\n                return true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default solveGrid\r\n","import { AnyAction } from 'redux'\r\nimport { GRID } from 'typings'\r\n\r\nimport { compareArrays, copyGrid, createFullGrid, removeNumbers } from 'utils'\r\n\r\nimport { IReducer } from './interfaces'\r\nimport * as types from './types'\r\n\r\nconst initialState: IReducer = {}\r\n\r\nfunction reducer(state = initialState, action: AnyAction): IReducer {\r\n  switch (action.type) {\r\n    case types.CREATE_GRID: {\r\n      const solvedGrid = createFullGrid()\r\n      const gridCopy = copyGrid(solvedGrid)\r\n      const challengeGrid = removeNumbers(gridCopy)\r\n      const workingGrid = copyGrid(challengeGrid)\r\n      return {\r\n        ...state,\r\n        challengeGrid,\r\n        solvedGrid,\r\n        workingGrid,\r\n      }\r\n    }\r\n    case types.FILL_BLOCK: {\r\n      if (state.workingGrid && state.solvedGrid) {\r\n        if (\r\n          state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value\r\n        ) {\r\n          alert('Incorrect option!')\r\n          return state\r\n        }\r\n        state.workingGrid[action.coords[0]][action.coords[1]] = action.value\r\n        if (compareArrays(state.workingGrid, state.solvedGrid)) {\r\n          alert('Completed!')\r\n        }\r\n\r\n        return { ...state, workingGrid: [...state.workingGrid] as GRID }\r\n      }\r\n      return state\r\n    }\r\n    case types.SELECT_BLOCK:\r\n      return {\r\n        ...state,\r\n        selectedBlock: action.coords,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import reducer from './reducer'\r\n\r\nexport * from './actions'\r\nexport * from './interfaces'\r\n\r\nexport type IReducer = ReturnType<typeof reducer>\r\nexport default reducer\r\n","import { createStore } from 'redux'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nimport reducer from 'reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'sudoku',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nfunction configureStore() {\r\n  const store = createStore(persistedReducer, devToolsEnhancer({}))\r\n  const persistor = persistStore(store)\r\n  return { persistor, store }\r\n}\r\n\r\nexport default configureStore\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import styled, { css } from 'styled-components'\r\n\r\nimport { IProps } from './types'\r\n\r\nexport const Container = styled.div<IProps>`\r\n  ${({ active, puzzle, theme }) => css`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1 0 0;\r\n    font-weight: ${puzzle && 'bold'};\r\n    font-size: 20px;\r\n    height: auto;\r\n    background-color: ${active ? theme.colors.blue : theme.colors.white};\r\n    border: solid 1px ${theme.colors.black};\r\n    transition: ${theme.transition};\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.lightblue};\r\n    }\r\n  `}\r\n`\r\n","import React, { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnyAction, Dispatch } from 'redux'\r\n\r\nimport { IReducer, selectBlock } from 'reducers'\r\n\r\nimport { IProps, IState } from './types'\r\n\r\nimport { Container } from './styles'\r\n\r\nconst Block: FC<IProps> = ({ rowIndex, colIndex }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ challengeGrid, workingGrid, selectedBlock }) => ({\r\n      isActive: selectedBlock\r\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\r\n        : false,\r\n      isPuzzle:\r\n        challengeGrid && challengeGrid[rowIndex][colIndex] !== 0 ? true : false,\r\n      value: workingGrid ? workingGrid[rowIndex][colIndex] : 0,\r\n    })\r\n  )\r\n\r\n  const { value, isActive, isPuzzle } = state\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  const handleClick = () => {\r\n    if (!isActive) dispatch(selectBlock([rowIndex, colIndex]))\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      data-cy={`block-${rowIndex}-${colIndex}`}\r\n      key={colIndex}\r\n      active={isActive}\r\n      puzzle={isPuzzle}\r\n      onClick={handleClick}\r\n    >\r\n      {value === 0 ? '' : value}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Block\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`\r\n\r\nexport const Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:first-child {\r\n      div {\r\n        border-top: 4px solid ${theme.colors.black};\r\n      }\r\n    }\r\n\r\n    &:nth-child(3n + 3) {\r\n      div {\r\n        border-bottom: 3px solid ${theme.colors.black};\r\n      }\r\n    }\r\n\r\n    div {\r\n      &:nth-child(3n + 1) {\r\n        border-left: 4px solid ${theme.colors.black};\r\n      }\r\n\r\n      &:last-child {\r\n        border-right: 4px solid ${theme.colors.black};\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React, { FC, Children, useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dispatch, AnyAction } from 'redux'\r\n\r\nimport { INDEX, NUMBERS } from 'typings'\r\nimport { createGrid, fillBlock, IReducer, selectBlock } from 'reducers'\r\n\r\nimport { IState } from './types'\r\nimport Block from './block'\r\n\r\nimport { Container, Row } from './styles'\r\n\r\nconst Grid: FC = () => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, solvedGrid, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n      solvedGrid,\r\n    })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n  const create = useCallback(() => dispatch(createGrid()), [dispatch])\r\n\r\n  const moveUp = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedBlock[0] > 0) {\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] - 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n    }\r\n  }, [state, dispatch])\r\n\r\n  const moveDown = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedBlock[0] < 8) {\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] + 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n    }\r\n  }, [state, dispatch])\r\n\r\n  const moveLeft = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedBlock[1] > 0) {\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] - 1) as INDEX,\r\n        ])\r\n      )\r\n    }\r\n  }, [state, dispatch])\r\n\r\n  const moveRight = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedBlock[1] < 8) {\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] + 1) as INDEX,\r\n        ])\r\n      )\r\n    }\r\n  }, [dispatch, state])\r\n\r\n  const fill = useCallback(\r\n    (n: NUMBERS) => {\r\n      if (state.selectedBlock && state.selectedValue === 0) {\r\n        dispatch(fillBlock(n, state.selectedBlock))\r\n      }\r\n    },\r\n    [dispatch, state.selectedBlock, state.selectedValue]\r\n  )\r\n\r\n  const pressOne = useCallback(() => {\r\n    fill(1)\r\n  }, [fill])\r\n\r\n  const pressTwo = useCallback(() => {\r\n    fill(2)\r\n  }, [fill])\r\n\r\n  const pressThree = useCallback(() => {\r\n    fill(3)\r\n  }, [fill])\r\n\r\n  const pressFour = useCallback(() => {\r\n    fill(4)\r\n  }, [fill])\r\n\r\n  const pressFive = useCallback(() => {\r\n    fill(5)\r\n  }, [fill])\r\n\r\n  const pressSix = useCallback(() => {\r\n    fill(6)\r\n  }, [fill])\r\n\r\n  const pressSeven = useCallback(() => {\r\n    fill(7)\r\n  }, [fill])\r\n\r\n  const pressEight = useCallback(() => {\r\n    fill(8)\r\n  }, [fill])\r\n\r\n  const pressNine = useCallback(() => {\r\n    fill(9)\r\n  }, [fill])\r\n\r\n  useEffect(() => {\r\n    const handleKeyUp = (e: any) => {\r\n      switch (e.keyCode) {\r\n        case 38:\r\n          moveUp()\r\n          break\r\n        case 40:\r\n          moveDown()\r\n          break\r\n        case 37:\r\n          moveLeft()\r\n          break\r\n        case 39:\r\n          moveRight()\r\n          break\r\n        case 49:\r\n        case 97:\r\n          pressOne()\r\n          break\r\n        case 50:\r\n        case 98:\r\n          pressTwo()\r\n          break\r\n        case 51:\r\n        case 99:\r\n          pressThree()\r\n          break\r\n        case 52:\r\n        case 100:\r\n          pressFour()\r\n          break\r\n        case 53:\r\n        case 101:\r\n          pressFive()\r\n          break\r\n        case 54:\r\n        case 102:\r\n          pressSix()\r\n          break\r\n        case 55:\r\n        case 103:\r\n          pressSeven()\r\n          break\r\n        case 56:\r\n        case 104:\r\n          pressEight()\r\n          break\r\n        case 57:\r\n        case 105:\r\n          pressNine()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [\r\n    moveDown,\r\n    moveLeft,\r\n    moveRight,\r\n    moveUp,\r\n    pressEight,\r\n    pressFive,\r\n    pressFour,\r\n    pressNine,\r\n    pressOne,\r\n    pressSeven,\r\n    pressSix,\r\n    pressThree,\r\n    pressTwo,\r\n    state,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (!state.solvedGrid) create()\r\n  }, [create, state.solvedGrid])\r\n\r\n  return (\r\n    <Container data-cy=\"grid-container\">\r\n      {Children.toArray(\r\n        [...Array(9)].map((_, rowIndex) => (\r\n          <Row data-cy=\"grid-row-container\" key={rowIndex}>\r\n            {Children.toArray(\r\n              [...Array(9)].map((_, colIndex) => (\r\n                <Block\r\n                  rowIndex={rowIndex as INDEX}\r\n                  colIndex={colIndex as INDEX}\r\n                />\r\n              ))\r\n            )}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React, { FC, useCallback } from 'react'\r\nimport { Action, Dispatch } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Button } from 'components'\r\nimport { createGrid } from 'reducers'\r\n\r\nconst NewButton: FC = () => {\r\n  const dispatch = useDispatch<Dispatch<Action>>()\r\n\r\n  const createNewGrid = useCallback(() => {\r\n    if (window.confirm('Are you sure you want to start a new game?')) {\r\n      dispatch(createGrid())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return <Button onClick={createNewGrid}>New Game</Button>\r\n}\r\n\r\nexport default NewButton\r\n","export const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n`\r\n","import React, { FC, useCallback } from 'react'\r\nimport { AnyAction, Dispatch } from 'redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { IProps, IState } from './types'\r\n\r\nimport { Button } from 'components'\r\nimport { fillBlock, IReducer } from 'reducers'\r\n\r\nconst NumberButton: FC<IProps> = ({ value }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n    })\r\n  )\r\n\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  const fill = useCallback(() => {\r\n    const { selectedBlock, selectedValue } = state\r\n    if (selectedBlock && selectedValue === 0) {\r\n      dispatch(fillBlock(value, selectedBlock))\r\n    }\r\n  }, [dispatch, state, value])\r\n\r\n  return <Button onClick={fill}>{value}</Button>\r\n}\r\n\r\nexport default NumberButton\r\n","import React, { FC } from 'react'\r\nimport { NUMBERS } from 'typings'\r\nimport { numbers } from './consts'\r\nimport { Container } from './styles'\r\nimport Button from './button'\r\n\r\nconst Numbers: FC = () => (\r\n  <Container>\r\n    {(numbers as NUMBERS[]).map((value) => (\r\n      <Button key={value} value={value} />\r\n    ))}\r\n  </Container>\r\n)\r\n\r\nexport default Numbers\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    min-height: 40px;\r\n    background-color: ${theme.colors.black};\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${theme.colors.white};\r\n    margin: 4px 2px;\r\n    padding: 0;\r\n    opacity: 0.9;\r\n    transition: ${theme.transition};\r\n    cursor: pointer;\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: 0;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Card = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${theme.colors.white};\r\n    color: ${theme.colors.black};\r\n    border-radius: 15px;\r\n    max-height: fit-content;\r\n    padding: 15px;\r\n  `}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-width: 500px;\r\n`\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.white};\r\n    text-align: center;\r\n    margin-top: 0;\r\n  `}\r\n`\r\n","import { createGlobalStyle, css } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  ${({ theme }) => css`\r\n    html {\r\n      height: 100%;\r\n\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        margin: 0;\r\n\r\n        #root {\r\n          display: flex;\r\n          justify-content: center;\r\n          font-family: sans-serif;\r\n          background: ${theme.colors.background};\r\n          color: ${theme.colors.white};\r\n          height: 100%;\r\n          padding: 15px;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { configureStore, register } from './core'\nimport { Card, Content, Grid, NewButton, Numbers, Title } from './components'\n\nimport { GlobalStyles, theme } from './styles'\n\nconst { persistor, store } = configureStore()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Content data-cy=\"content\">\n          <Title data-cy=\"title\">Sudoku</Title>\n          <Card data-cy=\"card\">\n            <NewButton />\n            <Grid />\n            <Numbers />\n          </Card>\n        </Content>\n      </PersistGate>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\nregister()\n","export default {\r\n  colors: {\r\n    background: 'radial-gradient(#282c34cc, #282c34)',\r\n    black: '#282c34',\r\n    blue: '#a0e9fd',\r\n    lightblue: '#caf3fe',\r\n    white: 'white',\r\n  },\r\n  transition: '0.3s',\r\n}\r\n","export const CREATE_GRID = 'CREATE_GRID'\r\nexport const FILL_BLOCK = 'FILL_BLOCK'\r\nexport const SELECT_BLOCK = 'SELECT_BLOCK'\r\n"],"sourceRoot":""}